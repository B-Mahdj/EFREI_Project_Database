{"ast":null,"code":"export function hasProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\nexport function lastItemOf(arr) {\n  return arr[arr.length - 1];\n} // push only the items not included in the array\n\nexport function pushUnique(arr) {\n  for (var _len = arguments.length, items = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    items[_key - 1] = arguments[_key];\n  }\n\n  items.forEach(item => {\n    if (arr.includes(item)) {\n      return;\n    }\n\n    arr.push(item);\n  });\n  return arr;\n}\nexport function stringToArray(str, separator) {\n  // convert empty string to an empty array\n  return str ? str.split(separator) : [];\n}\nexport function isInRange(testVal, min, max) {\n  const minOK = min === undefined || testVal >= min;\n  const maxOK = max === undefined || testVal <= max;\n  return minOK && maxOK;\n}\nexport function limitToRange(val, min, max) {\n  if (val < min) {\n    return min;\n  }\n\n  if (val > max) {\n    return max;\n  }\n\n  return val;\n}\nexport function createTagRepeat(tagName, repeat) {\n  let attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  let index = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  let html = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '';\n  const openTagSrc = Object.keys(attributes).reduce((src, attr) => {\n    let val = attributes[attr];\n\n    if (typeof val === 'function') {\n      val = val(index);\n    }\n\n    return `${src} ${attr}=\"${val}\"`;\n  }, tagName);\n  html += `<${openTagSrc}></${tagName}>`;\n  const next = index + 1;\n  return next < repeat ? createTagRepeat(tagName, repeat, attributes, next, html) : html;\n} // Remove the spacing surrounding tags for HTML parser not to create text nodes\n// before/after elements\n\nexport function optimizeTemplateHTML(html) {\n  return html.replace(/>\\s+/g, '>').replace(/\\s+</, '<');\n}","map":{"version":3,"names":["hasProperty","obj","prop","Object","prototype","hasOwnProperty","call","lastItemOf","arr","length","pushUnique","items","forEach","item","includes","push","stringToArray","str","separator","split","isInRange","testVal","min","max","minOK","undefined","maxOK","limitToRange","val","createTagRepeat","tagName","repeat","attributes","index","html","openTagSrc","keys","reduce","src","attr","next","optimizeTemplateHTML","replace"],"sources":["/Users/karimzhan/Desktop/react/front_projet_bdd/node_modules/@themesberg/tailwind-datepicker/js/lib/utils.js"],"sourcesContent":["export function hasProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nexport function lastItemOf(arr) {\n  return arr[arr.length - 1];\n}\n\n// push only the items not included in the array\nexport function pushUnique(arr, ...items) {\n  items.forEach((item) => {\n    if (arr.includes(item)) {\n      return;\n    }\n    arr.push(item);\n  });\n  return arr;\n}\n\nexport function stringToArray(str, separator) {\n  // convert empty string to an empty array\n  return str ? str.split(separator) : [];\n}\n\nexport function isInRange(testVal, min, max) {\n  const minOK = min === undefined || testVal >= min;\n  const maxOK = max === undefined || testVal <= max;\n  return minOK && maxOK;\n}\n\nexport function limitToRange(val, min, max) {\n  if (val < min) {\n    return min;\n  }\n  if (val > max) {\n    return max;\n  }\n  return val;\n}\n\nexport function createTagRepeat(tagName, repeat, attributes = {}, index = 0, html = '') {\n  const openTagSrc = Object.keys(attributes).reduce((src, attr) => {\n    let val = attributes[attr];\n    if (typeof val === 'function') {\n      val = val(index);\n    }\n    return `${src} ${attr}=\"${val}\"`;\n  }, tagName);\n  html += `<${openTagSrc}></${tagName}>`;\n\n  const next = index + 1;\n  return next < repeat\n    ? createTagRepeat(tagName, repeat, attributes, next, html)\n    : html;\n}\n\n// Remove the spacing surrounding tags for HTML parser not to create text nodes\n// before/after elements\nexport function optimizeTemplateHTML(html) {\n  return html.replace(/>\\s+/g, '>').replace(/\\s+</, '<');\n}\n"],"mappings":"AAAA,OAAO,SAASA,WAAT,CAAqBC,GAArB,EAA0BC,IAA1B,EAAgC;EACrC,OAAOC,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCL,GAArC,EAA0CC,IAA1C,CAAP;AACD;AAED,OAAO,SAASK,UAAT,CAAoBC,GAApB,EAAyB;EAC9B,OAAOA,GAAG,CAACA,GAAG,CAACC,MAAJ,GAAa,CAAd,CAAV;AACD,C,CAED;;AACA,OAAO,SAASC,UAAT,CAAoBF,GAApB,EAAmC;EAAA,kCAAPG,KAAO;IAAPA,KAAO;EAAA;;EACxCA,KAAK,CAACC,OAAN,CAAeC,IAAD,IAAU;IACtB,IAAIL,GAAG,CAACM,QAAJ,CAAaD,IAAb,CAAJ,EAAwB;MACtB;IACD;;IACDL,GAAG,CAACO,IAAJ,CAASF,IAAT;EACD,CALD;EAMA,OAAOL,GAAP;AACD;AAED,OAAO,SAASQ,aAAT,CAAuBC,GAAvB,EAA4BC,SAA5B,EAAuC;EAC5C;EACA,OAAOD,GAAG,GAAGA,GAAG,CAACE,KAAJ,CAAUD,SAAV,CAAH,GAA0B,EAApC;AACD;AAED,OAAO,SAASE,SAAT,CAAmBC,OAAnB,EAA4BC,GAA5B,EAAiCC,GAAjC,EAAsC;EAC3C,MAAMC,KAAK,GAAGF,GAAG,KAAKG,SAAR,IAAqBJ,OAAO,IAAIC,GAA9C;EACA,MAAMI,KAAK,GAAGH,GAAG,KAAKE,SAAR,IAAqBJ,OAAO,IAAIE,GAA9C;EACA,OAAOC,KAAK,IAAIE,KAAhB;AACD;AAED,OAAO,SAASC,YAAT,CAAsBC,GAAtB,EAA2BN,GAA3B,EAAgCC,GAAhC,EAAqC;EAC1C,IAAIK,GAAG,GAAGN,GAAV,EAAe;IACb,OAAOA,GAAP;EACD;;EACD,IAAIM,GAAG,GAAGL,GAAV,EAAe;IACb,OAAOA,GAAP;EACD;;EACD,OAAOK,GAAP;AACD;AAED,OAAO,SAASC,eAAT,CAAyBC,OAAzB,EAAkCC,MAAlC,EAAiF;EAAA,IAAvCC,UAAuC,uEAA1B,EAA0B;EAAA,IAAtBC,KAAsB,uEAAd,CAAc;EAAA,IAAXC,IAAW,uEAAJ,EAAI;EACtF,MAAMC,UAAU,GAAGhC,MAAM,CAACiC,IAAP,CAAYJ,UAAZ,EAAwBK,MAAxB,CAA+B,CAACC,GAAD,EAAMC,IAAN,KAAe;IAC/D,IAAIX,GAAG,GAAGI,UAAU,CAACO,IAAD,CAApB;;IACA,IAAI,OAAOX,GAAP,KAAe,UAAnB,EAA+B;MAC7BA,GAAG,GAAGA,GAAG,CAACK,KAAD,CAAT;IACD;;IACD,OAAQ,GAAEK,GAAI,IAAGC,IAAK,KAAIX,GAAI,GAA9B;EACD,CANkB,EAMhBE,OANgB,CAAnB;EAOAI,IAAI,IAAK,IAAGC,UAAW,MAAKL,OAAQ,GAApC;EAEA,MAAMU,IAAI,GAAGP,KAAK,GAAG,CAArB;EACA,OAAOO,IAAI,GAAGT,MAAP,GACHF,eAAe,CAACC,OAAD,EAAUC,MAAV,EAAkBC,UAAlB,EAA8BQ,IAA9B,EAAoCN,IAApC,CADZ,GAEHA,IAFJ;AAGD,C,CAED;AACA;;AACA,OAAO,SAASO,oBAAT,CAA8BP,IAA9B,EAAoC;EACzC,OAAOA,IAAI,CAACQ,OAAL,CAAa,OAAb,EAAsB,GAAtB,EAA2BA,OAA3B,CAAmC,MAAnC,EAA2C,GAA3C,CAAP;AACD"},"metadata":{},"sourceType":"module"}