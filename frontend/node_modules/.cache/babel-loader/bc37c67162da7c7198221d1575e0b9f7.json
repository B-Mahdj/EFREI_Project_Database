{"ast":null,"code":"import { pushUnique } from '../../lib/utils.js';\nimport { parseHTML, replaceChildNodes } from '../../lib/dom.js'; // Base class of the view classes\n\nexport default class View {\n  constructor(picker, config) {\n    Object.assign(this, config, {\n      picker,\n      element: parseHTML(`<div class=\"datepicker-view flex\"></div>`).firstChild,\n      selected: []\n    });\n    this.init(this.picker.datepicker.config);\n  }\n\n  init(options) {\n    if (options.pickLevel !== undefined) {\n      this.isMinView = this.id === options.pickLevel;\n    }\n\n    this.setOptions(options);\n    this.updateFocus();\n    this.updateSelection();\n  } // Execute beforeShow() callback and apply the result to the element\n  // args:\n  // - current - current value on the iteration on view rendering\n  // - timeValue - time value of the date to pass to beforeShow()\n\n\n  performBeforeHook(el, current, timeValue) {\n    let result = this.beforeShow(new Date(timeValue));\n\n    switch (typeof result) {\n      case 'boolean':\n        result = {\n          enabled: result\n        };\n        break;\n\n      case 'string':\n        result = {\n          classes: result\n        };\n    }\n\n    if (result) {\n      if (result.enabled === false) {\n        el.classList.add('disabled');\n        pushUnique(this.disabled, current);\n      }\n\n      if (result.classes) {\n        const extraClasses = result.classes.split(/\\s+/);\n        el.classList.add(...extraClasses);\n\n        if (extraClasses.includes('disabled')) {\n          pushUnique(this.disabled, current);\n        }\n      }\n\n      if (result.content) {\n        replaceChildNodes(el, result.content);\n      }\n    }\n  }\n\n}","map":{"version":3,"names":["pushUnique","parseHTML","replaceChildNodes","View","constructor","picker","config","Object","assign","element","firstChild","selected","init","datepicker","options","pickLevel","undefined","isMinView","id","setOptions","updateFocus","updateSelection","performBeforeHook","el","current","timeValue","result","beforeShow","Date","enabled","classes","classList","add","disabled","extraClasses","split","includes","content"],"sources":["/Users/karimzhan/Desktop/EFREI_Project_Database/frontend/node_modules/@themesberg/tailwind-datepicker/js/picker/views/View.js"],"sourcesContent":["import {pushUnique} from '../../lib/utils.js';\nimport {parseHTML, replaceChildNodes} from '../../lib/dom.js';\n\n// Base class of the view classes\nexport default class View {\n  constructor(picker, config) {\n    Object.assign(this, config, {\n      picker,\n      element: parseHTML(`<div class=\"datepicker-view flex\"></div>`).firstChild,\n      selected: [],\n    });\n    this.init(this.picker.datepicker.config);\n  }\n\n  init(options) {\n    if (options.pickLevel !== undefined) {\n      this.isMinView = this.id === options.pickLevel;\n    }\n    this.setOptions(options);\n    this.updateFocus();\n    this.updateSelection();\n  }\n\n  // Execute beforeShow() callback and apply the result to the element\n  // args:\n  // - current - current value on the iteration on view rendering\n  // - timeValue - time value of the date to pass to beforeShow()\n  performBeforeHook(el, current, timeValue) {\n    let result = this.beforeShow(new Date(timeValue));\n    switch (typeof result) {\n      case 'boolean':\n        result = {enabled: result};\n        break;\n      case 'string':\n        result = {classes: result};\n    }\n\n    if (result) {\n      if (result.enabled === false) {\n        el.classList.add('disabled');\n        pushUnique(this.disabled, current);\n      }\n      if (result.classes) {\n        const extraClasses = result.classes.split(/\\s+/);\n        el.classList.add(...extraClasses);\n        if (extraClasses.includes('disabled')) {\n          pushUnique(this.disabled, current);\n        }\n      }\n      if (result.content) {\n        replaceChildNodes(el, result.content);\n      }\n    }\n  }\n}\n"],"mappings":"AAAA,SAAQA,UAAR,QAAyB,oBAAzB;AACA,SAAQC,SAAR,EAAmBC,iBAAnB,QAA2C,kBAA3C,C,CAEA;;AACA,eAAe,MAAMC,IAAN,CAAW;EACxBC,WAAW,CAACC,MAAD,EAASC,MAAT,EAAiB;IAC1BC,MAAM,CAACC,MAAP,CAAc,IAAd,EAAoBF,MAApB,EAA4B;MAC1BD,MAD0B;MAE1BI,OAAO,EAAER,SAAS,CAAE,0CAAF,CAAT,CAAsDS,UAFrC;MAG1BC,QAAQ,EAAE;IAHgB,CAA5B;IAKA,KAAKC,IAAL,CAAU,KAAKP,MAAL,CAAYQ,UAAZ,CAAuBP,MAAjC;EACD;;EAEDM,IAAI,CAACE,OAAD,EAAU;IACZ,IAAIA,OAAO,CAACC,SAAR,KAAsBC,SAA1B,EAAqC;MACnC,KAAKC,SAAL,GAAiB,KAAKC,EAAL,KAAYJ,OAAO,CAACC,SAArC;IACD;;IACD,KAAKI,UAAL,CAAgBL,OAAhB;IACA,KAAKM,WAAL;IACA,KAAKC,eAAL;EACD,CAjBuB,CAmBxB;EACA;EACA;EACA;;;EACAC,iBAAiB,CAACC,EAAD,EAAKC,OAAL,EAAcC,SAAd,EAAyB;IACxC,IAAIC,MAAM,GAAG,KAAKC,UAAL,CAAgB,IAAIC,IAAJ,CAASH,SAAT,CAAhB,CAAb;;IACA,QAAQ,OAAOC,MAAf;MACE,KAAK,SAAL;QACEA,MAAM,GAAG;UAACG,OAAO,EAAEH;QAAV,CAAT;QACA;;MACF,KAAK,QAAL;QACEA,MAAM,GAAG;UAACI,OAAO,EAAEJ;QAAV,CAAT;IALJ;;IAQA,IAAIA,MAAJ,EAAY;MACV,IAAIA,MAAM,CAACG,OAAP,KAAmB,KAAvB,EAA8B;QAC5BN,EAAE,CAACQ,SAAH,CAAaC,GAAb,CAAiB,UAAjB;QACAhC,UAAU,CAAC,KAAKiC,QAAN,EAAgBT,OAAhB,CAAV;MACD;;MACD,IAAIE,MAAM,CAACI,OAAX,EAAoB;QAClB,MAAMI,YAAY,GAAGR,MAAM,CAACI,OAAP,CAAeK,KAAf,CAAqB,KAArB,CAArB;QACAZ,EAAE,CAACQ,SAAH,CAAaC,GAAb,CAAiB,GAAGE,YAApB;;QACA,IAAIA,YAAY,CAACE,QAAb,CAAsB,UAAtB,CAAJ,EAAuC;UACrCpC,UAAU,CAAC,KAAKiC,QAAN,EAAgBT,OAAhB,CAAV;QACD;MACF;;MACD,IAAIE,MAAM,CAACW,OAAX,EAAoB;QAClBnC,iBAAiB,CAACqB,EAAD,EAAKG,MAAM,CAACW,OAAZ,CAAjB;MACD;IACF;EACF;;AAjDuB"},"metadata":{},"sourceType":"module"}